version: '3.8'
services:
  api:
    build: .
    container_name: api
    environment:
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: postgres
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: 5432
      VIRTUAL_HOST: ${VIRTUAL_HOST}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
    command: >
      sh -c "npm run typeorm migration:run &&
             npm run start:prod"
    networks:
      - nestwork
  postgres:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - nestwork
    volumes:
      - pgdata:/var/lib/postgresql/data
  nginx:
    image: jwilder/nginx-proxy
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - nestwork

volumes:
  pgdata:
networks:
  nestwork:
    driver: bridge
